name: Web CI

on:
  push:
    branches: [main, develop]
    paths: ['src/web/**']
  pull_request:
    branches: [main, develop]
    paths: ['src/web/**']
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  WORKING_DIRECTORY: 'src/web'
  COVERAGE_THRESHOLD: '80'
  CACHE_DEPENDENCY_PATH: '~/.npm,**/node_modules'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DEPENDENCY_PATH }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm ci --audit

      - name: Security audit
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm audit

      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Lint
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run lint -- --max-warnings 0

      - name: Type check
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npx tsc --noEmit --strict

      - name: Run tests
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm test -- --coverage --coverageThreshold=${{ env.COVERAGE_THRESHOLD }} --maxWorkers=2 --ci

      - name: Build
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run build -- --production

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: src/web/build